# .azure-pipelines.yml
trigger:
  branches:
    include:
      - main
      - feature/*

pr:
  branches:
    include:
      - '*'

variables:
  BuildConfiguration: Release
  FEED: '000133ad-8b16-41ad-9d35-5040d0cd2c2f'     # Azure Artifacts feed GUID
  PROJECT_PATH: 'ShoninSyncAPI/ShoninSync.API.csproj'

stages:
# ===================== Build & Pack (.NET 9; version from AssemblyVersion) =====================
- stage: Build_Pack
  displayName: Build & Pack (.NET 9; version from AssemblyVersion)
  jobs:
  - job: pack
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      clean: true

    - task: UseDotNet@2
      displayName: 'Use .NET SDK 9'
      inputs:
        packageType: 'sdk'
        version: '9.0.x'

    - task: NuGetAuthenticate@1
      displayName: 'Authenticate to Azure Artifacts'

    - script: dotnet restore "$(PROJECT_PATH)"
      displayName: Restore

    - script: >
        dotnet build "$(PROJECT_PATH)"
        --configuration $(BuildConfiguration)
        --no-restore
        /p:ContinuousIntegrationBuild=true
      displayName: Build

    # Read AssemblyVersion from csproj or AssemblyInfo.cs, normalize to SemVer; add prerelease suffix for branches
    - task: PowerShell@2
      name: ComputeVersion
      displayName: 'Compute package version from AssemblyVersion'
      inputs:
        targetType: inline
        script: |
          $projPath = "$(PROJECT_PATH)"
          if (-not (Test-Path $projPath)) { Write-Error "Project not found: $projPath"; exit 1 }

          function Get-AssemblyVersionFromCsproj($path) {
            try {
              [xml]$xml = Get-Content $path
              $props = $xml.Project.PropertyGroup
              $v = ($props | Where-Object { $_.AssemblyVersion }).AssemblyVersion
              if ([string]::IsNullOrWhiteSpace($v)) { return $n
